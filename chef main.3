def add_ingredient():
    try:
        with open('ingredients.txt', 'r') as f:
            lines = f.readlines()
        print(f'--Ingredients--')
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            print(f'{e_name}, Qty:{e_qty}, Price per one:RM{e_price}, Total price:RM{e_total}\n')
        name = input(f'Enter ingredient name: ').lower()
        quantity = int(input(f'Enter quantity: '))
        price = float(input(f'Enter price {name} per 1 unit: '))
        total_p = float(quantity * price)
        with open('ingredients.txt', 'a') as f:
            f.write(f'{name},{quantity},{price},{total_p}\n')
        print(f'Ingredient: {name}, Qty:{quantity}, Price per one:RM{price:.2f}, Total price:RM{total_p:.2f} added successfully')
    except ValueError:
        print('Input quantity and price must be number.')
    except Exception as e:
        print(f'Error adding ingredient: {e}')

def e_ingredient_name():
    try:
        with open('ingredients.txt', 'r') as f:
            lines = f.readlines()
        print(f'--Ingredients--')
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            print(f'{e_name}, Qty:{e_qty}, Price per one:RM{e_price}, Total price:RM{e_total}\n')
        old_name = input(f'Enter the ingredient name you want to edit: ')
        # Set a flag to track if the ingredient is found and updated
        updated = False
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            if old_name == e_name:
                print(line)
                new_name = input(f'Enter new name for {old_name}: ').lower()
                updated_line = line.replace(e_name, new_name)
                lines[lines.index(line)] = updated_line  # Update the line in the list
                updated = True
                break
        if updated:
            with open('ingredients.txt', 'w') as f:
                f.writelines(lines)
            print(f'Ingredient {old_name} updated to {new_name} successfully')
        else:
            print(f'Ingredient {old_name} not found.')
    except Exception as e:
        print(f'Error editing ingredient: {e}')

def e_ingredient_qty():
    try:
        with open('ingredients.txt', 'r') as f:
            lines = f.readlines()
        print(f'--Ingredients--')
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            print(f'{e_name}, Qty:{e_qty}, Price per one:RM{e_price}, Total price:RM{e_total}\n')
        old_qty = int(input(f'Enter the ingredient quantity you want to edit: '))
        updated = False
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            if str(old_qty) == e_qty:
                print(line)
                new_qty = int(input(f'Enter new quantity for {old_qty}: '))
                new_total = float(int(new_qty) * float(e_price))
                updated_line = line.replace(str(e_qty), str(new_qty)).replace(e_total, str(new_total))
                lines[lines.index(line)] = updated_line
                updated = True
                break
        if updated:
            with open('ingredients.txt', 'w') as f:
                f.writelines(lines)
            print(f'Ingredient quantity for {old_qty} updated to {new_qty} successfully')
        else:
            print(f'Ingredient {old_qty} not found.')
    except ValueError:
        print(f'Input must be number.')

def e_ingredient_price():
    try:
        with open('ingredients.txt', 'r') as f:
            lines = f.readlines()
        print(f'--Ingredients--')
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            print(f'{e_name}, Qty:{e_qty}, Price per one:RM{e_price.strip()}, Total price:RM{e_total.strip()}\n')
        old_price = float(input(f'Enter the ingredient price you want to edit: '))
        updated = False
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            if old_price == float(e_price):
                print(line)
                new_price = float(input(f'Enter new price for RM{old_price:.2f}: '))
                new_total = float(int(e_qty.strip()) * float(new_price))
                updated_line = line.replace(str(e_price),str(new_price)).replace(e_total, str(new_total))
                lines[lines.index(line)] = updated_line
                updated = True
                break
        if updated:
            with open('ingredients.txt', 'w') as f:
                f.writelines(lines)
            print(f'Ingredient price for RM{old_price:.2f} updated to RM{new_price:.2f} successfully')
        else:
            print(f'Ingredient {old_price} not found.')
    except ValueError:
        print(f'Input must be number.')

def edit_ingredient():
    while True:
        print(f'--Edit Ingredients--\n1. Name\n2. Quantity\n3. Price\n4. Exit')
        choice = int(input(f'Select an option: '))
        if choice == 1:
            e_ingredient_name()
        elif choice == 2:
            e_ingredient_qty()
        elif choice == 3:
            e_ingredient_price()
        elif choice == 4:
            print(f'Exit successfully.')
            break
        else:
            print(f'Invalid option. Select again.')

def delete_ingredient():
    try:
        with open('ingredients.txt', 'r') as f:
            lines = f.readlines()
        print(f'--Ingredients--')
        for line in lines:
            e_name, e_qty, e_price, e_total = line.strip().split(',')
            print(f'{e_name}, Qty:{e_qty}, Price per one:RM{e_price}, Total price:RM{e_total}\n')
        d_name = input(f'Delete ingredient name: ')
        deleted = False
        with open('ingredients.txt', 'w') as f:
            for line in lines:
                e_name, e_qty, e_price, e_total = line.strip().split(',')
                if e_name != d_name:
                    f.write(line)
                else:
                    deleted = True
            if deleted:
                print(f'Ingredient: {d_name} deleted successfully')
    except Exception as e:
        print(f'Error delete ingredient: {e}')

def ingredients():
    while True:
        print(f'--Requests--')
        print(f'1. Add ingredients\n2. Edit ingredients\n3. Delete ingredients\n4. Exit')
        choice = int(input(f'Select an option: '))
        if choice == 1:
            add_ingredient()
        elif choice == 2:
            edit_ingredient()
        elif choice == 3:
            delete_ingredient()
        elif choice == 4:
            print(f'Exit successfully.')
            break
        else:
            print(f'Invalid options. Select again.')

def main():
    while True:
        print(f'--Chef Management--')
        print(f'1. View Orders\n2. Update Order Status\n3. Requests Ingredients\n4. Update Profile\n5. Exit')
        choice = int(input(f'Select an option: '))
        if choice == 1:
            pass
        elif choice == 2:
            pass
        elif choice == 3:
            ingredients()
        elif choice == 4:
            pass
        elif choice == 5:
            print(f'Exit successfully.')
            break
        else:
            print(f'Invalid options. Select again.')

main()
